@page
@model BancoWebApp.Pages.IndexModel
@{
    ViewData["Title"] = "Proyecto 1: Cola B√°sica";
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
        }

        h1 {
            color: white;
            text-align: center;
            margin-bottom: 10px;
            font-size: 2.5em;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
        }

        .subtitle {
            color: rgba(255,255,255,0.9);
            text-align: center;
            margin-bottom: 30px;
            font-size: 1.1em;
        }

        .main-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            margin-bottom: 20px;
        }

        .card {
            background: white;
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
        }

        .card h2 {
            color: #667eea;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 3px solid #764ba2;
            font-size: 1.5em;
        }

        .form-group {
            margin-bottom: 15px;
        }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            color: #333;
            font-weight: 600;
        }

        .form-group input {
            width: 100%;
            padding: 12px;
            border: 2px solid #e0e0e0;
            border-radius: 8px;
            font-size: 1em;
        }

        .form-group input:focus {
            outline: none;
            border-color: #667eea;
        }

        .btn {
            padding: 12px 20px;
            border: none;
            border-radius: 8px;
            font-size: 0.95em;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            width: 100%;
            margin-bottom: 10px;
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .btn-success {
            background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
            color: white;
        }

        .btn-danger {
            background: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
            color: white;
        }

        .btn-info {
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            color: white;
        }

        .btn-secondary {
            background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);
            color: #333;
        }

        .btn-warning {
            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            color: white;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.3);
        }

        .status-card {
            background: #f8f9fa;
            border-radius: 10px;
            padding: 15px;
            margin-bottom: 15px;
        }

        .status-item {
            display: flex;
            justify-content: space-between;
            padding: 8px 0;
            border-bottom: 1px solid #e0e0e0;
        }

        .status-item:last-child {
            border-bottom: none;
        }

        .status-label {
            font-weight: 600;
            color: #555;
        }

        .status-value {
            color: #667eea;
            font-weight: 600;
        }

        .alert {
            padding: 15px 20px;
            border-radius: 10px;
            margin-bottom: 15px;
            font-weight: 500;
        }

        .alert-success {
            background: #d4edda;
            color: #155724;
            border-left: 5px solid #28a745;
        }

        .alert-error {
            background: #f8d7da;
            color: #721c24;
            border-left: 5px solid #dc3545;
        }

        .alert-info {
            background: #d1ecf1;
            color: #0c5460;
            border-left: 5px solid #17a2b8;
        }

        .cola-visual {
            display: flex;
            gap: 10px;
            padding: 20px;
            background: #f8f9fa;
            border-radius: 10px;
            overflow-x: auto;
            min-height: 80px;
            align-items: center;
            justify-content: center;
        }

        .cola-item {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 15px 25px;
            border-radius: 10px;
            font-size: 1.2em;
            font-weight: 600;
            box-shadow: 0 4px 10px rgba(0,0,0,0.2);
            animation: fadeIn 0.3s ease;
        }

        .cola-empty {
            color: #999;
            font-style: italic;
        }

        .arrow {
            color: #667eea;
            font-size: 1.5em;
            font-weight: bold;
        }

        .methods-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 10px;
        }

        .nav-buttons {
            text-align: center;
            margin-top: 20px;
        }

        .btn-nav {
            display: inline-block;
            padding: 12px 30px;
            background: white;
            color: #667eea;
            text-decoration: none;
            border-radius: 8px;
            font-weight: 600;
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
            transition: all 0.3s ease;
        }

        .btn-nav:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(0,0,0,0.3);
        }

        @@keyframes fadeIn {
            from { opacity: 0; transform: scale(0.8); }
            to { opacity: 1; transform: scale(1); }
        }

        @@media (max-width: 968px) {
            .main-grid {
                grid-template-columns: 1fr;
            }
            .methods-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>üèóÔ∏è PROYECTO 1: COLA B√ÅSICA</h1>

        <div class="main-grid">
            <!-- Panel de Operaciones -->
            <div class="card">
                <h2>üì• Operaciones B√°sicas</h2>
                
                <!-- Encolar -->
                <form method="post" asp-page-handler="Encolar">
                    <div class="form-group">
                        <label for="Valor">Valor a Encolar</label>
                        <input type="number" asp-for="Valor" id="Valor" required placeholder="Ingrese un n√∫mero">
                    </div>
                    <button type="submit" class="btn btn-success">‚ûï Encolar (Enqueue)</button>
                </form>

                <!-- Desencolar -->
                <form method="post" asp-page-handler="Desencolar">
                    <button type="submit" class="btn btn-danger">‚ûñ Desencolar (Dequeue)</button>
                </form>

                <h2 style="margin-top: 20px;">üîç M√©todos de Consulta</h2>
                
                <div class="methods-grid">
                    <form method="post" asp-page-handler="Peek">
                        <button type="submit" class="btn btn-info">üëÅÔ∏è Peek (Frente)</button>
                    </form>
                    
                    <form method="post" asp-page-handler="PeekFinal">
                        <button type="submit" class="btn btn-info">üëÅÔ∏è Peek Final</button>
                    </form>
                    
                    <form method="post" asp-page-handler="EstaVacia">
                        <button type="submit" class="btn btn-secondary">‚ùì ¬øEst√° Vac√≠a?</button>
                    </form>
                    
                    <form method="post" asp-page-handler="EstaLlena">
                        <button type="submit" class="btn btn-secondary">‚ùì ¬øEst√° Llena?</button>
                    </form>
                    
                    <form method="post" asp-page-handler="Tamano">
                        <button type="submit" class="btn btn-secondary">üìä Tama√±o</button>
                    </form>
                    
                    <form method="post" asp-page-handler="Mostrar">
                        <button type="submit" class="btn btn-secondary">üìã Mostrar</button>
                    </form>
                </div>

                <form method="post" asp-page-handler="Limpiar" style="margin-top: 10px;">
                    <button type="submit" class="btn btn-warning">üßπ Limpiar Cola</button>
                </form>
            </div>

            <!-- Panel de Estado -->
            <div class="card">
                <h2>üìä Estado de la Cola</h2>
                
                <div class="status-card">
                    <div class="status-item">
                        <span class="status-label">Estado:</span>
                        <span class="status-value">@Model.EstadoCola</span>
                    </div>
                    <div class="status-item">
                        <span class="status-label">Tama√±o:</span>
                        <span class="status-value">@Model.TamanoCola / 10</span>
                    </div>
                    <div class="status-item">
                        <span class="status-label">Est√° Vac√≠a:</span>
                        <span class="status-value">@(Model.EstaVacia ? "S√≠ ‚úì" : "No ‚úó")</span>
                    </div>
                    <div class="status-item">
                        <span class="status-label">Est√° Llena:</span>
                        <span class="status-value">@(Model.EstaLlena ? "S√≠ ‚úì" : "No ‚úó")</span>
                    </div>
                </div>

                @if (!string.IsNullOrEmpty(Model.Resultado))
                {
                    <div class="alert @(Model.Resultado.Contains("Error") ? "alert-error" : "alert-success")">
                        @Model.Resultado
                    </div>
                }

                <h2>üìã Visualizaci√≥n de la Cola</h2>
                <div class="cola-visual">
                    @if (Model.ElementosCola != null && Model.ElementosCola.Any())
                    {
                        <span style="color: #667eea; font-weight: 600;">Frente ‚Üí</span>
                        @foreach (var elemento in Model.ElementosCola)
                        {
                            <div class="cola-item">@elemento</div>
                            if (elemento != Model.ElementosCola.Last())
                            {
                                <span class="arrow">‚Üí</span>
                            }
                        }
                        <span style="color: #667eea; font-weight: 600;">‚Üê Final</span>
                    }
                    else
                    {
                        <p class="cola-empty">Cola vac√≠a - No hay elementos</p>
                    }
                </div>

                @if (Model.ElementosCola != null && Model.ElementosCola.Any())
                {
                    <div class="alert alert-info" style="margin-top: 15px;">
                        <strong>Elementos:</strong> [@string.Join(", ", Model.ElementosCola)]
                    </div>
                }
            </div>
        </div>
    </div>
</body>
</html>
